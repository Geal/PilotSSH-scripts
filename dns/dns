#!/bin/bash

if [ "$#" -ne 1 ]
then
  echo '{ "version": 1, "title": "DNS", "type":"status", "status":"error", "message":"Please enter a domain" }';
else
  IFS=$'\n'$'\r'
  arr=( $(dig $1 2>/dev/null) );
  if [ $? != 0 ]
  then
    echo '{ "version": 1, "title": "DNS", "type":"status", "status":"error", "message":"Please enter a valid domain" }';
  else
    echo "{ \"version\": 1, \"title\": \"DNS\", \"type\":\"commands\", \"values\" : [ { \"name\" : \"FQDN\", \"value\" : \"$1\", \"command\" : \"\"}";
    for line in "${arr[@]}"; do
      regex="^$1.*A[[:space:]]*(.*)"
      if [[ "$line" =~ $regex ]] ; then echo ",{\"name\": \"A\", \"value\":\"${BASH_REMATCH[1]}\"}"; fi
    done
    arr=( $(dig $1 AAAA 2>/dev/null) );
    for line in "${arr[@]}"; do
      regex="^$1.*AAAA[[:space:]]*(.*)"
      if [[ "$line" =~ $regex ]] ; then echo ",{\"name\": \"AAAA\", \"value\":\"${BASH_REMATCH[1]}\"}"; fi
    done
    arr=( $(dig $1 PTR 2>/dev/null) );
    for line in "${arr[@]}"; do
      regex="^$1.*PTR[[:space:]]*(.*)"
      if [[ "$line" =~ $regex ]] ; then echo ",{\"name\": \"PTR\", \"value\":\"${BASH_REMATCH[1]}\"}"; fi
    done
    arr=( $(dig $1 MX 2>/dev/null) );
    for line in "${arr[@]}"; do
      regex="^$1.*MX[[:space:]]*(.*)"
      if [[ "$line" =~ $regex ]] ; then echo ",{\"name\": \"MX\", \"value\":\"${BASH_REMATCH[1]}\"}"; fi
    done
    arr=( $(dig $1 NS 2>/dev/null) );
    for line in "${arr[@]}"; do
      regex="^$1.*NS[[:space:]]*(.*)"
      if [[ "$line" =~ $regex ]] ; then echo ",{\"name\": \"NS\", \"value\":\"${BASH_REMATCH[1]}\"}"; fi
    done
    arr=( $(dig $1 TXT 2>/dev/null) );
    for line in "${arr[@]}"; do
      regex="^$1.*TXT[[:space:]]*(.*)"
      if [[ "$line" =~ $regex ]] ; then txt=$(echo ${BASH_REMATCH[1]} | sed 's/"/\\"/g'); echo ",{\"name\": \"TXT\", \"value\":\"${txt[@]}\"}"; fi
    done
    echo " ] }";
  fi
fi
